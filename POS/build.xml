<?xml version="1.0" encoding="UTF-8"?>

<project name="murdjad" default="build" basedir=".">
	<property file="build.properties"/>
	<property name="src.dir" value="${basedir}/src" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="build.classes.dir" value="${build.dir}/classes" />
	
	<property name="conf.dir" value="${basedir}/conf" />
	
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="build.test.dir" value="${build.dir}/test"/>
	<property name="test.dir" value="${basedir}/test"/>
	<property name="dist.dir" value="${build.dir}/jar"/>
	<property file="version.properties" />


	<!-- database variables -->
	<property name="data.dir" value="${basedir}/data" />
	<property name="db.file" value="${data.dir}/POSdb" />
	<property name="db.alias" value="POS" />
	<property name="db.url" value="jdbc:hsqldb:hsql://localhost/POS" />
	<property name="lib.hibernate.dir" value="${lib.dir}/hibernate" />
	
	<path id="build.classpath">
		                <fileset dir="${lib.dir}">
		                        <include name="*.jar"/>
		                </fileset>
		                <fileset dir="${lib.hibernate.dir}">
		                        <include name="*.jar"/>
		                </fileset>
		</path>

	<path id="test.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
		  <pathelement path="${build.classes.dir}/" />
		  <pathelement path="${build.test.dir}/" />
	</path>
	
	
	
	<path id="compile.classpath">
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${lib.hibernate.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	
	<path id="run.classpath">
		<pathelement location="${build.classes.dir}" />
		<!-- configuration -->
		<pathelement location="${conf.dir}" />
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>

		<fileset dir="${lib.hibernate.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- clean | Eliminates previous data. -->
	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

	<!-- init | Creates folders build & build/jar. -->
	<target name="init" depends="clean">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.classes.dir}"/>
		<mkdir dir="${build.test.dir}"/>
	</target>

	<!-- TODO build | Compiles code from src to build/classes. -->
	<target name="build" depends="init">
		<javac srcdir="${src.dir}"
            destdir="${build.classes.dir}"
            debug="true"
            debuglevel="lines,vars,source"
            encoding="utf-8"
            compiler="modern"
            target="1.7"
            source="1.7"
        	classpathref="build.classpath" />
		
	</target>
	
	<!-- dbmanager | Starts the DB manager (duuuh) -->
	<target name="dbmanager" description="Start the HSQLDB manager">
		<java classname="org.hsqldb.util.DatabaseManagerSwing"
			classpathref="run.classpath" fork="yes">
			<arg line="--user sa --url ${db.url}" />
		</java>
	</target>

	<!-- startdb | Pretty self-explanatory too -->
	<target name="startdb" description="Start the HSQLDB with the default params">
		<java classname="org.hsqldb.Server" classpathref="run.classpath"
			fork="yes">
			<arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'" />
		</java>
	</target>

	<!-- run | Executes ee.ut.math.tvt.murdjad.Intro in build/classes. -->
	<target name="run" depends="build">
		<!-- <java classname="${main.class}" fork="true"> <classpath refid="test.classpath"/> 
			<classpath> <path location="${class.dir}"/> </classpath> </java> -->
		<java classname="ee.ut.math.tvt.murdjad.Intro" 
			classpathref="build.classpath"
			fork="yes">
				<jvmarg value="-Xdebug" />
			<jvmarg
				value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044" />
		</java>
	</target>


	<!-- runc | Runs the application -->
	<target name="runc" depends="build" description="Run the application (console)">
		<java classname="ee.ut.math.tvt.murdjad.Intro" classpathref="build.classpath"
			fork="yes">
			<arg value="console" />
		</java>
	</target>

	<!-- dist | Updates version.properties and creates murdjad.jar. -->
	 <target name="dist" depends="build" description="Creates the jar file and adds to the version number">
	                
	                <propertyfile file="version.properties">
	                        <entry  key="build.revision.number" type="int" default="1" operation="+" value="1"/>
	                </propertyfile>
	                <property file="version.properties"/>
	                <propertyfile file="version.properties">
	                        <entry  key="build.number" value="${build.major.number}.${build.minor.number}.${build.revision.number}"/>
	                </propertyfile>
	                
	                <mkdir dir="${dist.dir}"/>
	                <manifestclasspath property="manifest.classpath" jarfile="${dist.dir}/murdjad.jar">
	                        <classpath>
	                        <fileset dir="${dist.dir}" includes="*.jar"/>
	                                <fileset dir="${lib.dir}" includes="*.jar"/>
	                    </classpath>
	                </manifestclasspath>
	                <jar destfile="${dist.dir}/murdjad.jar" basedir="${build.dir}/classes">
	                        <fileset dir="${basedir}" includes="images/ lib/ application.properties version.properties" />
	                        <manifest>
	                                <attribute name="Main-Class" value="ee.ut.math.tvt.murdjad.Intro"/>
	                            <attribute name="Class-Path" value="${manifest.classpath}"/>
	                        </manifest>
	                </jar>
	        </target>

	<target name="git_add">
		<exec executable="git">
			<arg value="add" />
			<arg value="-A" />
		</exec>
	</target>

	<target name="git_commit" depends="git_add">
		<input message="Please enter commit message: " addproperty="message" />
		<exec executable="git">
			<arg value="commit" />
			<arg value="-m" />
			<arg value="${message}" />
		</exec>
		<antcall target="git_push" />
	</target>

	<target name="git_push">
		<exec executable="git">
			<arg value="push" />
		</exec>
	</target>

	<!-- jrun | Executes murdjad.jar in build/jar. -->
	<target name="jrun" depends="dist">
		<java jar="${dist.dir}/murdjad.jar" fork="true">
			
		</java>
	</target>

    <!-- Build test -->
    <target name="build-tests" depends="build" description="Build the system">
            <mkdir dir="${build.test.dir}"/>
            <javac
                    includeantruntime="false"
        srcdir="${test.dir}"
        destdir="${build.test.dir}"
        debug="true"
        debuglevel="lines,vars,source"
        encoding="utf-8"
        compiler="modern"
        target="1.7"
        source="1.7"
            classpathref="build.classpath">
                    <classpath>
                            <pathelement path="${build.classes.dir}" />
                    </classpath>
            </javac>
    </target>

	
	 <target name="test" depends="build-tests" description="Run the template application">
	                <junit>
	                        <classpath refid="test.classpath" />
	                        <formatter type="brief" usefile="false" />
	                        <batchtest>
	                                <fileset dir="${build.test.dir}" includes="**/*.class" />
	                        </batchtest>
	                </junit>
	        </target>
	
</project>

